import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import sys

# H√†m t√¨m ki·∫øm gi·ªëng ch√≥/m√®o t·ª´ h√¨nh ·∫£nh
def search_breed(image_path: str):
    # T·∫°o ƒë·ªëi t∆∞·ª£ng ChromeOptions m·ªõi m·ªói l·∫ßn kh·ªüi t·∫°o
    options = uc.ChromeOptions()
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-gpu")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-popup-blocking")
    options.add_argument("--disable-notifications")
    options.add_argument("--disable-infobars")

    # Kh·ªüi t·∫°o undetected-chromedriver
    driver = uc.Chrome(options=options)
    try:
        # Truy c·∫≠p Google
        driver.get("https://www.google.com/imghp")
        
        # T·ªëi ƒëa h√≥a c·ª≠a s·ªï tr√¨nh duy·ªát
        driver.maximize_window()

        # Nh·∫•n v√†o n√∫t t√¨m ki·∫øm b·∫±ng h√¨nh ·∫£nh
        try:
            time.sleep(2)
            image_button = WebDriverWait(driver, 10).until(
                EC.element_to_be_clickable((By.XPATH, '//*[@aria-label="T√¨m ki·∫øm b·∫±ng h√¨nh ·∫£nh"]'))
            )
            image_button.click()
        except Exception as e:
            print(f"‚ùå L·ªói khi nh·∫•n n√∫t t√¨m ki·∫øm b·∫±ng h√¨nh ·∫£nh: {e}")

        # T·∫£i ·∫£nh l√™n
        try:
            time.sleep(2)
            upload_button = WebDriverWait(driver, 10).until(
                EC.presence_of_element_located((By.XPATH, '//input[@type="file"]'))
            )
            upload_button.send_keys(image_path)
        except Exception as e:
            print(f"‚ùå L·ªói khi t·∫£i ·∫£nh l√™n: {e}")

        # Ch·ªù k·∫øt qu·∫£ v√† cu·ªôn trang nh·∫π
        time.sleep(5)
        driver.execute_script("window.scrollBy(0, 200);")
        time.sleep(2)

        # L·∫•y t√™n gi·ªëng t·ª´ XPath
        try:
            breed_name_element = driver.find_element(By.XPATH, "/html/body/div[3]/div/div[9]/div/div/div[2]/div/div/div/div/div[1]/div[2]/div[1]/div/div[1]/div/a[1]/div/div/div/div[2]/div/div/div")
            breed_name = breed_name_element.text
            return breed_name
        except Exception as e:
            print(f"‚ùå L·ªói khi l·∫•y t√™n gi·ªëng t·ª´ XPath: {e}")
            return None
    except Exception as e:
        print(f"üö® L·ªói chung: {e}")
        return None
    finally:
        driver.quit()

# N·∫øu script ƒë∆∞·ª£c g·ªçi t·ª´ d√≤ng l·ªánh, ch·∫°y h√†m search_breed
if __name__ == "__main__":
    if len(sys.argv) > 1:
        image_path = sys.argv[1]
        breed = search_breed(image_path)
        if breed:
            print(f"T√™n gi·ªëng ch√≥/m√®o l√†: {breed}")
        else:
            print("Kh√¥ng th·ªÉ nh·∫≠n di·ªán gi·ªëng ch√≥/m√®o.")
